#!/usr/bin/env python3
"""
By Braddock Gaskill, 22 May 2017

ansi2unicode converts input Code Page 437 ANSI character bytes in the
range 0-255 into their corresponding modern Unicode characters.  This
allows rendering of ANSI graphics on modern terminals without the 
installation of custom VGA fonts.
"""

import io
import sys
import os
import re

global source_dir
abspath = os.path.abspath(__file__)
source_dir = os.path.dirname(abspath)


def get_source_dir():
    """Directory of the python executable"""
    global source_dir
    return source_dir


def read_codemap(fname):
    table = {}
    with io.open(fname, 'rt', encoding='utf-8') as f:
        for s in f:
            s = s.strip()
            g = re.match('0x(..)[ \t]+0x(....)[ \t]+#.*', s)
            if g is not None:
                ansi = int(g.groups()[0], 16)
                uni = chr(int(g.groups()[1], 16))
                table[ansi] = uni
    return table


table = read_codemap(os.path.join(get_source_dir(), 'CP437.TXT'))

while True:
    c = sys.stdin.buffer.read(1)
    if len(c) == 0:
        break
    uni = table.get(c[0], chr(c[0]))
    sys.stdout.write(uni)
    sys.stdout.flush()
