#!/usr/bin/env python3
"""
By Braddock Gaskill, 22 May 2017

ansi2unicode converts input Code Page 437 ANSI character bytes in the
range 0-255 into their corresponding modern Unicode characters.  This
allows rendering of ANSI graphics on modern terminals without the 
installation of custom VGA fonts.
"""

import io
import sys
import os
import re

global source_dir
abspath = os.path.abspath(__file__)
source_dir = os.path.dirname(abspath)


def get_source_dir():
    """Directory of the python executable"""
    global source_dir
    return source_dir


def read_codemap(fname):
    table = {}
    with io.open(fname, 'rt', encoding='utf-8') as f:
        for s in f:
            s = s.strip()
            g = re.match('0x(..)[ \t]+0x(....)[ \t]+#.*', s)
            if g is not None:
                ansi = int(g.groups()[0], 16)
                uni = chr(int(g.groups()[1], 16))
                table[ansi] = uni
    return table


def ansi_add(s, n):
    if len(s) == 0:
        s = "\x1b["
    else:
        s += ";"
    s += str(n)
    return s


def wwiv(x):
    """Accepts a one byte WWIV graphics code and outputs ANSI"""

    # Default user WWIV color mapping in WWIV.INI
    newuser_color = [7, 11, 14, 13, 31, 10, 12, 9, 5, 3]

    # Mapping from WWIV color codes to ANSI color codes
    ansi_map = [0, 4, 2, 6, 1, 5, 3, 7]

    if x < len(newuser_color):
        x = newuser_color[x]

    wwiv_fg_bold = (x & 0x08) >> 3
    wwiv_fg_italics = (x & 0x80) >> 7
    wwiv_fg = x & 0x07
    wwiv_bg = (x & 0x70) >> 4

    ansi = ''
    ansi = ansi_add(ansi, wwiv_fg_bold)
    ansi = ansi_add(ansi, wwiv_fg_italics)
    ansi = ansi_add(ansi, 30 + ansi_map[wwiv_fg])
    ansi = ansi_add(ansi, 40 + ansi_map[wwiv_bg])

    #if x == 0x3e:  # Clear screen???
    #    print("Clear Screen")
    #    return '\x1b[2J\x1b[1;1H'

    if len(ansi) > 0:
        ansi += 'm'
    return ansi


table = read_codemap(os.path.join(get_source_dir(), 'CP437.TXT'))

wwiv_esc = False

while True:
    c = sys.stdin.buffer.read(1)
    if len(c) == 0:
        break
    if c[0] == 0x3:  # WWIV Ctrl-C Code
        wwiv_esc = True
        continue
    if wwiv_esc:
        wwiv_esc = False
        uni = wwiv(c[0])
    else:
        uni = table.get(c[0], chr(c[0]))
    sys.stdout.write(uni)
    sys.stdout.flush()
